name: Deploy Next.js site to Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    # If you stored env vars under the "github-pages" Environment, uncomment:
    # environment: github-pages
    env:
      # Prefer repo Variables; fall back to Secrets; else compute a default.
      # BASE PATH
      NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH != '' && vars.NEXT_PUBLIC_BASE_PATH || (secrets.NEXT_PUBLIC_BASE_PATH != '' && secrets.NEXT_PUBLIC_BASE_PATH || (endsWith(github.event.repository.name, '.github.io') && '' || format('/{0}', github.event.repository.name))) }}
      # SITE URL
      NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL != '' && vars.NEXT_PUBLIC_SITE_URL || (secrets.NEXT_PUBLIC_SITE_URL != '' && secrets.NEXT_PUBLIC_SITE_URL || (endsWith(github.event.repository.name, '.github.io') && format('https://{0}', github.repository_owner) || format('https://{0}.github.io/{1}', github.repository_owner, github.event.repository.name))) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: pm
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.pm.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.pm.outputs.manager }} ${{ steps.pm.outputs.install }}

      - name: Build (print env for sanity)
        run: |
          echo "BASE_PATH=$NEXT_PUBLIC_BASE_PATH"
          echo "SITE_URL=$NEXT_PUBLIC_SITE_URL"
          ${{ steps.pm.outputs.runner }} next build
          # Next 15 + output:export => out/ is created by next build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
